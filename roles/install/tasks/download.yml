# roles/install/tasks/download.yml
# ================================
#
# Copying
# -------
#
# Copyright (c) 2022 universe.hashicorp authors and contributors.
#
# This file is part of the *universe.hashicorp* project.
#
# *universe.hashicorp* is a free software project. You can redistribute it
# and/or modify it following the terms of the MIT License.
#
# This software project is distributed *as is*, WITHOUT WARRANTY OF ANY KIND;
# including but not limited to the WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE and NONINFRINGEMENT.
#
# You should have received a copy of the MIT License along with
# *universe.hashicorp*. If not, see <http://opensource.org/licenses/MIT>.
#
- name: "Download and verify package"
  block:
    - name: "Prepare working directory"
      ansible.builtin.tempfile:
        state: "directory"
      register: "_install_workdir"

    - name: "Download package signature"
      ansible.builtin.get_url:
        url: "{{ install_package_sig_url }}"
        dest: "{{ _install_workdir.path }}/{{ install_package_name }}-{{ install_package_version }}.sig"
        mode: "0400"

    - name: "Download package checksum"
      ansible.builtin.get_url:
        url: "{{ install_package_sum_url }}"
        dest: "{{ _install_workdir.path }}/{{ install_package_name }}-{{ install_package_version }}.sum"
        mode: "0400"

    - name: "Download package"
      ansible.builtin.get_url:
        url: "{{ install_package_url }}"
        dest: "{{ _install_workdir.path }}"
        mode: "0400"
      register: "_install_package_download"

    - name: "Ensure that provided checksum is legit"
      when: "_install_package_download.dest"
      ansible.builtin.command:
        cmd: >-
          gpg --verify {{ _install_workdir.path }}/{{ install_package_name }}-{{ install_package_version }}.sig
                       {{ _install_workdir.path }}/{{ install_package_name }}-{{ install_package_version }}.sum
      register: "_install_package_sig"
      changed_when: "_install_package_sig.rc == 0"

    - name: "Validate package integrity"
      when: "_install_package_download.dest"
      ansible.builtin.command:
        cmd: >-
          sha256sum --check
                    --ignore-missing
                    {{ _install_workdir.path }}/{{ install_package_name }}-{{ install_package_version }}.sum
        chdir: "{{ _install_workdir.path }}"
      register: "_install_package_integrity"
      changed_when: "_install_package_integrity.rc == 0"

    - name: "Unpack package"
      ansible.builtin.unarchive:
        src: "{{ _install_package_download.dest }}"
        dest: "{{ _install_workdir.path }}"
        remote_src: true
        creates: "{{ _install_workdir.path }}/{{ install_package_name }}"
  rescue:
    - name: "Cleaning up"
      ansible.builtin.debug:
        msg: "Cleaning: {{ _install_workdir.path }}"
      notify: "workdir-cleanup"
      changed_when: true

    - name: "Flush handlers"
      ansible.builtin.meta: "flush_handlers"

    - name: "Could not ensure package integrity"
      ansible.builtin.fail:
        msg: "Could not ensure package integrity: {{ install_package_name }} v{{ install_package_version }}"
